{% extends "base.html.twig" %}

{% block main %}
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb bg-dark text-light">
            <li class="breadcrumb-item active" aria-current="page">Lumières</li>
        </ol>
    </nav>

    <div class="card text-light bg-dark">
        <div class="card-header">
            Lumières
            <span class="badge badge-secondary">{{ lights|length }}</span>
        </div>
        <div class="card-body">
            <div class="row">
                {% for light in lights %}
                    <div class="col-4">
                        <div class="card text-white bg-dark">
                            <a href="{{ url('power', {"id": light.id, "power": light.power}) }}"
                               class="mt-4 pt-4 text-secondary text-center text-{{ light.power == 'on' ? 'light':'secondary' }}"
                               style="display:block;position:absolute;width:100%;" id="power-{{ light.id }}">
                                <i class="fa fa-2x fa-power-off" id="ico-power-{{ light.id }}" style="position:absolute;"></i>
                            </a>
                            <div class="card-body bg-deep-dark text-center">
                                <canvas height="150" style="width:100%!important;" id="canvas-{{ light.id }}"></canvas>
                            </div>
                            <div class="card-footer text-center">
                                <a href="{{ url('show', {"id": light.id}) }}" class="btn btn-block btn-dark"><i
                                            class="pt-1 fa fa-chevron-right float-right"></i> {{ light.label|title }}
                                </a>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>

    {#<div class="card text-light bg-dark mt-4">#}
        {#<div class="card-header">#}
            {#Groupes#}
            {#<span class="badge badge-secondary">2</span>#}
        {#</div>#}
        {#<div class="card-body">#}
            {#<div class="row">#}
                {#<div class="col-4">#}
                    {#<div class="card text-white bg-dark">#}
                        {#<div class="mt-4 pt-4 text-secondary text-center"#}
                             {#style="display:block;position:absolute;width:100%;height:70%">#}
                            {#<i class="mt-4 pt-2 fa fa-2x fa-lightbulb"></i>#}
                            {#<i class="mt-4 pt-2 fa fa-2x fa-lightbulb"></i>#}
                        {#</div>#}
                        {#<div class="card-body bg-deep-dark text-center">#}
                            {#<canvas id="canvas4"></canvas>#}
                        {#</div>#}
                        {#<div class="card-footer text-center">#}
                            {#<button type="button" class="btn btn-block btn-dark">Coin nuit</button>#}
                        {#</div>#}
                    {#</div>#}
                {#</div>#}

                {#<div class="col-4">#}
                    {#<div class="card text-white bg-dark">#}
                        {#<div class="mt-4 pt-4 text-light text-center"#}
                             {#style="display:block;position:absolute;width:100%;height:70%">#}
                            {#<i class="mt-4 pt-2 fa fa-2x fa-lightbulb"></i>#}
                            {#<i class="mt-4 pt-2 fa fa-2x fa-lightbulb"></i>#}
                        {#</div>#}
                        {#<div class="card-body bg-deep-dark text-center">#}
                            {#<canvas id="canvas5"></canvas>#}
                        {#</div>#}
                        {#<div class="card-footer text-center">#}
                            {#<button type="button" class="btn btn-block btn-dark">Coin jour</button>#}
                        {#</div>#}
                    {#</div>#}
                {#</div>#}

            {#</div>#}
        {#</div>#}
    {#</div>#}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gauge.js/1.3.6/gauge.min.js"
            integrity="sha256-LKU9ghY2QgkPr/yDfeLWFSzWfDf5JSPTNAIBnvglcsU=" crossorigin="anonymous"></script>
    <script>
        function resize() {
            {% for light in lights %}
            var powerElement = document.querySelector('#power-{{ light.id }}');
            var icoPowerElement = document.querySelector('#ico-power-{{ light.id }}');
            var canvasElement = document.querySelector('#canvas-{{ light.id }}');
            powerElement.style.height = canvasElement.clientHeight + 'px';
            icoPowerElement.style.top = `${Math.ceil(canvasElement.clientHeight/2) - Math.ceil(icoPowerElement.clientHeight/2) - 6}px`;
            console.log(icoPowerElement.clientWidth);
            icoPowerElement.style.left = `${Math.ceil(canvasElement.clientWidth/2) + Math.ceil(icoPowerElement.clientWidth/2) - 12}px`;
            {% endfor %}
        }

        window.onresize = resize;

        {% for i, light in lights %}
        var opts = {
            angle: 0.5, // The span of the gauge arc
            lineWidth: 0.06, // The line thickness
            radiusScale: 1, // Relative radius
            pointer: {
                length: 0.3, // // Relative to gauge radius
                strokeWidth: 0.15, // The thickness
                color: '#343a40' // Fill color
            },
            limitMax: false,     // If false, max value increases automatically if value > maxValue
            limitMin: false,     // If true, the min value of the gauge will be fixed
            colorStart: '#{{ colors[light.id] }}',   // Colors
            colorStop: '#{{ colors[light.id] }}',    // just experiment with them
            strokeColor: '#343a40',  // to see which ones work best for you
            generateGradient: true,
            highDpiSupport: true,     // High resolution support

        };
        var canvas = document.getElementById('canvas-{{ light.id }}'); // your canvas element
        var gauge = new Donut(canvas).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 100; // set max gauge value
        gauge.setMinValue(0);  // Prefer setter over gauge.minValue = 0
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        gauge.set({{ light.brightness * 100 }}); // set actual value
        {% endfor %}

        resize();
        // var canvas4 = document.getElementById('canvas4'); // your canvas element
        // var gauge4 = new Donut(canvas4).setOptions(opts); // create sexy gauge!
        // gauge4.maxValue = 100; // set max gauge value
        // gauge4.setMinValue(0);  // Prefer setter over gauge.minValue = 0
        // gauge4.animationSpeed = 10; // set animation speed (32 is default value)
        // gauge4.set(0); // set actual value
        //
        // var canvas5 = document.getElementById('canvas5'); // your canvas element
        // var gauge5 = new Donut(canvas5).setOptions(opts); // create sexy gauge!
        // gauge5.maxValue = 100; // set max gauge value
        // gauge5.setMinValue(0);  // Prefer setter over gauge.minValue = 0
        // gauge5.animationSpeed = 10; // set animation speed (32 is default value)
        // gauge5.set(45); // set actual value
    </script>
{% endblock %}